{"version":3,"sources":["js/timer.js","index.js"],"names":["refs","days","document","querySelector","hours","mins","secs","CountdownTimer","targetDate","start","currentTime","Date","now","deltaTime","time","getTimeComponents","updateClockFace","timerStart","setInterval","textContent","value","String","padStart","pad","Math","floor","timer","selector"],"mappings":";AAoDA,SAAA,EAAA,EAAA,GAAA,KAAA,aAAA,GAAA,MAAA,IAAA,UAAA,qCAAA,SAAA,EAAA,EAAA,GAAA,IAAA,IAAA,EAAA,EAAA,EAAA,EAAA,OAAA,IAAA,CAAA,IAAA,EAAA,EAAA,GAAA,EAAA,WAAA,EAAA,aAAA,EAAA,EAAA,cAAA,EAAA,UAAA,IAAA,EAAA,UAAA,GAAA,OAAA,eAAA,EAAA,EAAA,IAAA,IAAA,SAAA,EAAA,EAAA,EAAA,GAAA,OAAA,GAAA,EAAA,EAAA,UAAA,GAAA,GAAA,EAAA,EAAA,GAAA,EApDA,IAAMA,EAAO,CACXC,KAAMC,SAASC,cAAc,2BAC7BC,MAAOF,SAASC,cAAc,4BAC9BE,KAAMH,SAASC,cAAc,2BAC7BG,KAAMJ,SAASC,cAAc,4BAGzBI,EAAAA,WACwB,SAAA,EAAA,GAAdC,IAAAA,EAAAA,EAAAA,WAAc,EAAA,KAAA,GACrBA,KAAAA,WAAaA,EACbC,KAAAA,QA0CT,OAAA,EAAA,EAAA,CAAA,CAAA,IAAA,aAvCe,MAAA,WACLC,IAAAA,EAAcC,KAAKC,MACnBC,EAAY,KAAKL,WAAaE,EAC9BI,EAAO,KAAKC,kBAAkBF,GAE/BG,KAAAA,gBAAgBF,KAkCzB,CAAA,IAAA,QA/BU,MAAA,WAAA,IAAA,EAAA,KACDG,KAAAA,aAELC,YAAY,WACV,EAAKD,cACJ,OA0BP,CAAA,IAAA,kBAvB+C,MAAA,SAAA,GAA3BhB,IAAAA,EAAAA,EAAAA,KAAMG,EAAAA,EAAAA,MAAOC,EAAAA,EAAAA,KAAMC,EAAAA,EAAAA,KACnCN,EAAKC,KAAKkB,YAAiBlB,GAAAA,OAAAA,GAC3BD,EAAKI,MAAMe,YAAiBf,GAAAA,OAAAA,GAC5BJ,EAAKK,KAAKc,YAAiBd,GAAAA,OAAAA,GAC3BL,EAAKM,KAAKa,YAAiBb,GAAAA,OAAAA,KAmB/B,CAAA,IAAA,MAhBMc,MAAAA,SAAAA,GACKC,OAAAA,OAAOD,GAAOE,SAAS,EAAG,OAerC,CAAA,IAAA,oBAZoBR,MAAAA,SAAAA,GAQT,MAAA,CAAEb,KAPI,KAAKsB,IAAIC,KAAKC,MAAMX,EAAQ,QAO1BV,MAND,KAAKmB,IACjBC,KAAKC,MAAOX,EAAQ,MAAyB,OAKzBT,KAHT,KAAKkB,IAAIC,KAAKC,MAAOX,EAAQ,KAAoB,MAGlCR,KAFf,KAAKiB,IAAIC,KAAKC,MAAOX,EAAQ,IAAc,WAM5D,EA7CMP,GA6CAmB,EAAQ,IAAInB,EAAe,CAC/BoB,SAAU,WACVnB,WAAY,IAAIG,KAAK;;;;ACrDvB,aADA,QAAA,iBACA,QAAA","file":"src.be14aec7.js","sourceRoot":"..\\src","sourcesContent":["const refs = {\n  days: document.querySelector('span[data-value=\"days\"]'),\n  hours: document.querySelector('span[data-value=\"hours\"]'),\n  mins: document.querySelector('span[data-value=\"mins\"]'),\n  secs: document.querySelector('span[data-value=\"secs\"]'),\n};\n\nclass CountdownTimer {\n  constructor({ targetDate }) {\n    this.targetDate = targetDate;\n    this.start();\n  }\n\n  timerStart() {\n    const currentTime = Date.now();\n    const deltaTime = this.targetDate - currentTime;\n    const time = this.getTimeComponents(deltaTime);\n\n    this.updateClockFace(time);\n  }\n\n  start() {\n    this.timerStart();\n\n    setInterval(() => {\n      this.timerStart();\n    }, 1000);\n  }\n\n  updateClockFace({ days, hours, mins, secs }) {\n    refs.days.textContent = `${days}`;\n    refs.hours.textContent = `${hours}`;\n    refs.mins.textContent = `${mins}`;\n    refs.secs.textContent = `${secs}`;\n  }\n\n  pad(value) {\n    return String(value).padStart(2, '0');\n  }\n\n  getTimeComponents(time) {\n    const days = this.pad(Math.floor(time / (1000 * 60 * 60 * 24)));\n    const hours = this.pad(\n      Math.floor((time % (1000 * 60 * 60 * 24)) / (1000 * 60 * 60)),\n    );\n    const mins = this.pad(Math.floor((time % (1000 * 60 * 60)) / (1000 * 60)));\n    const secs = this.pad(Math.floor((time % (1000 * 60)) / 1000));\n\n    return { days, hours, mins, secs };\n  }\n}\n\nconst timer = new CountdownTimer({\n  selector: '#timer-1',\n  targetDate: new Date('Dec 25, 2020'),\n});\n","import './js/timer.js';\nimport './styles/styles.css';\n"]}